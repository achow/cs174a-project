TEAM MEMBERS:

Name: Amy Lin
ID: 903929105

Name: Tai-Lin Chu
ID: 203937255

Name: Steven Ly
ID: 803938426

Name: Alexander Chow
ID: 603888804
 

PROJECT DESCRIPTION:
 
1. Project Introduction:

	Main Idea:
		We will be creating a 3D Pac Man game.

	Description:
		The game will be from the perspective of Pac Man. We are planning on making this a first person game (i.e. from Pac Man’s view).
		We will use the keyboard to control Pac Man’s movements.
		The maze will be a 3D version of a one-story-high maze. All characters, objects (including points) will be in 3D. This will be the main view. When changing directions, the camera will turn smoothly to the new direction.
		There will be 2D map of the maze (top-down view) in a corner of the screen. This will be modeled after a normal Pac Man game (i.e. the character will move like so).

	model:
		list all model ID

	underscore:
		for map reduce, array opts

	min:
		minimized version of js class library

	gl-matrix:
		vector library

	actor:
		extends: object
		for monster and pacman

	block:
		extends: object
		1x1x1 wall

	monster:
		extends: actor
		pacman's enemy

	object:
		base class
		provides draw()..

	pacman:
		extends: actor
		controllable

	position:
		x, y, z, w

	world:
		contains object


2. Project Result:

	Features Implemented:
		1. Orthogonal Map - on the corner.
		2. Pac Man Viewpoint - the camera follows Pac Man around. You can also move around the camera in place once the view attaches to Pac Man. This can be improved by giving more controls to Pac Man once in this mode.
		3. Keyboard control - you control the game via the keyboard. We can expand this later by controlling it via a controller or phone.
		4. Gameplay - most of the gameplay for Pac Man has been implemented. We can expand this by adding in more "stories" to the maze (i.e. a two story maze where Pac Man is able to climb stairs or use wormholes to travel).

	Advanced Topics:
		1. Color Picking
			Selecting a monster will change it into red.
			This was done by giving each monster a different color and checking that color via readpixel. The selected object was identified via color and the color changed via the vertex shader. This was intregated into the game by making the picked monsters slower (only one monster can be picked at at time). This is only for regular monsters, not for vulnerable ones.
			
		2. Collisions
			All objects will interact (including the game world, i.e. the maze) when they collide. Pacman eats the pellets and dies when it completely collides with the monster.
			The distance from each object to each other was calculated. Each object was given a position in the maze, and when detecting collisions, the distance between these positions were calculated (also given the size of each object).
